{
	"name": "bash-dev",
	"build": {
		// "dockerfile": "Containerfile.debian",
		// "args": { "VARIANT": "stable-slim" }
		"dockerfile": "Containerfile.ubuntu",
		"args": {
			"VARIANT": "latest",
			"USERNAME": "vscode",
			"USER_UID": "1000",
			"BASHDB_VERSION": "5.0-1.1.2"
		}
	},

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"shellformat.path": "/usr/local/bin/shfmt",
		"files.associations": {
			"*.sh": "shellscript",
			"*.bash": "shellscript"
		},
		"[shellscript]": {
			"editor.defaultFormatter": "foxundermoon.shell-format",
			"editor.formatOnSave": true,
			"editor.formatOnPaste": false
		},
		"shellformat.flag": "-s -i 2 -ci -sr"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"editorconfig.editorconfig",
		"foxundermoon.shell-format",
		"remisa.shellman",
		"rogalmic.bash-debug",
		"timonwong.shellcheck"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",

	"workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,Z",
	"workspaceFolder": "/workspace",

	"runArgs": ["--userns=keep-id", "--name=bash-dev"],
	"containerUser": "vscode"
}
